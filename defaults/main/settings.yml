---
###############################################################################
# Overseerr Settings
###############################################################################
# Many of these options are generally undocumented except via reading installer
# code or playing with WebUI options and checking setting changes.
#
# Recommend to configure overserr in the UI and migrate settings values here.
# Settings are located in '/etc/overserr/settings.json' and installed directory
# '/opt/overseerr/overseerr-{RELASE}/config/settings.json'.
#
# Documented usage here reflect code and WebUI analysis. These may change over
# time and should be re-validated from time to time. Experimental features may
# be deprecated in future releases.
#
# Reference:
# * https://docs.overseerr.dev/using-overseerr/settings

# Overseerr plex client ID. Set to a static value for redeployment.
# Default: '{RANDOM UUID}'.
overseerr_client_id: '{{ lookup("ansible.builtin.password", "/dev/null", chars=["ascii_letters", "digits"])|to_uuid }}'

# VAPID private key.
# Voluntary Application Server Identification (VAPID) for Web Push keys enable
# push messaging from server without the use of a third-party service.
#
# Generated automatically using overseerr settings on initial install. Migrate
# value after initial installation.
#
# Default: ''.
#
# Reference:
# * https://datatracker.ietf.org/doc/html/rfc8292
overseerr_vapid_private: ''

# VAPID public key.
# Voluntary Application Server Identification (VAPID) for Web Push keys enable
# push messaging from server without the use of a third-party service.
#
# Generated automatically using overseerr settings on initial install. Migrate
# value after initial installation.
#
# Default: ''.
#
# Reference:
# * https://datatracker.ietf.org/doc/html/rfc8292
overseerr_vapid_public: ''

# Overseerr API key. Must be base64 encoded.
#
# Default: '{RANDOM KEY}'.
#
# Reference:
# * https://github.com/sct/overseerr/blob/develop/server/lib/settings.ts
overseerr_main_api_key: '{{ now|to_uuid|b64encode }}'

# Application title. Default: 'Overseerr'.
overseerr_main_application_title: 'Overseerr'

# Externally accessible URL of your overseerr instance. You must configure this
# setting in order to enable password reset and generation emails, which will
# link to this url.
#
# Default: ''.
overseerr_main_application_url: ''

# Enable CSRF proection.
# CSRF stands for cross-site request forgery. When this setting is enabled, all
# external API access that alters overseerr application data is blocked (sets
# external API access to read-only (requires HTTPS)).
#
# If you do not use overseerr integrations with third-party applications to
# add/modify/delete requests or users, you can consider enabling this setting
# to protect against malicious attacks.
#
# HTTPS is required to use this, meaning that once this setting is enabled you
# will no longer be able to access your overseerr instance over HTTP (including
# using an IP address and port number).
#
# Default: False.
overseerr_main_csrf_protection: false

# Cache externally sourced images.
# Requires significant disk space depending on library sizes. Overseerr will
# proxy and cache images from pre-configured sources such as TMDB.
#
# Images are saved in the 'config/cache/images' install directory and stale
# images are cleared out based on 'overseerr_plex_jobs_image_cache_cleanup'.
#
# You should enable this if you are having issues with loading images directly
# from TMDB in your browser or are concerned about data usage.
#
# Special case: Experimental (may be removed in future versions).
#
# Default: False.
overseerr_main_cache_images: false

# Default Permissions assigned to new users.
# Values are added cumulatively together to specify exact permissions.
#
# User with 'request' and 'manage issues' permissions:
# overseerr_main_default_permissions: 1048608
#
# Values:
#           0: none
#           2: admin
#           8: manage users
#          16: manage requests
#          32: request (default)
#          64: vote
#         128: auto approve
#         256: auto approve movie
#         512: auto approve tv
#        1024: request 4k
#        2048: request 4k movie
#        4096: request 4k tv
#        8192: request advanced
#       16384: request view
#       32768: auto approve 4k
#       65536: auto approve 4k movie
#      131072: auto approve 4k tv
#      262144: request movie
#      524288: request tv
#     1048576: manage issues
#     2097152: view issues
#     4194304: create issues
#     8388608: auto request
#    16777216: auto request movie
#    33554432: auto request tv
#    67108864: recent view
#   134217728: watchlist view
#
# Default: 32 (request).
#
# Reference:
# * https://github.com/sct/overseerr/blob/develop/server/lib/permissions.ts
overseerr_main_default_permissions: 32

# Global movie request limit (number of requests per period).
# Default: 0 (unlimited).
overseerr_main_default_quotas_movie_quota_limit: 0

# Global movie request limit (period in days). Default: 7 (unlimited).
overseerr_main_default_quotas_movie_quota_days: 7

# Global series request limit (number of requests per period).
# Default: 0 (unlimited).
overseerr_main_default_quotas_tv_quota_limit: 0

# Global series request limit (period in days). Default: 7 (unlimited).
overseerr_main_default_quotas_tv_quota_days: 7

# Hide available media in categories and media detail pages.
# Available media will still appear in search results however, so it is
# possible to locate and view hidden items by searching for them by title.
#
# Special case: Experimental (may be removed in future versions).
#
# Default: False.
overseerr_main_hide_available: false

# Enable local sign-in.
# Allow users to sign in using their email address and password, instead of
# Plex OAuth. Users who have configured passwords will be allowed to sign in
# using their email address.
#
# When disabled Plex OAuth becomes the only sign-in option, and any local users
# will not be able to sign in to overseerr.
#
# Default: True.
overseerr_main_local_login: true

# Enable new plex sign-in.
# Allow Plex users to sign in without first being imported or added.
#
# Users with access to your Plex server will be able to sign in to overseerr
# even if they have not yet been imported. Users will be automatically assigned
# the permissions configured in the Default Permissions setting
# 'overseerr_main_default_permissions' upon first sign-in.
#
# Default: True.
overseerr_main_new_plex_login: true

# Discover region.
# Filters by regional availability. Uses ISO 3166-2 naming scheme.
#
# Default: '' (all regions).
#
# Reference:
# * https://en.wikipedia.org/wiki/ISO_3166-2
overseerr_main_region: ''

# Discover languages.
# Filter by original languages. Uses ISO 639 naming scheme. List of strings
# containing regions.
#
# overseerr_main_original_language:
#   - 'en'
#   - 'de'
#
# Default: [] (all languages).
#
# Reference:
# * https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes
overseerr_main_original_language: []

# Enable proxy support.
# If you have overseerr behind a reverse proxy, enable this setting to allow
# overseerr to correctly register client IP addresses.
#
# Default: False.
overseerr_main_trust_proxy: false

# Allow partial series requests.
# Submit requests for specific seasons of TV series. If disabled, users will
# only be able to submit requests for all unavailable seasons.
#
# Default: True.
overseerr_main_partial_requests_enabled: true

# Display language.
# Uses ISO 639 naming scheme.
#
# Default: 'en'.
#
# Reference:
# * https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes
overseerr_main_locale: 'en'

# Mark installation as initialized.
# Uninitialized installations will redirect all uri access to the setup page.
#
# Default: True.
overseerr_main_public_initialized: true

###############################################################################
# Plex
###############################################################################
# Plex server friendly name. Default: ''.
overseerr_plex_name: ''

# Plex server IP or DNS name.
# You must use an externally accessible IP or DNS name to connect to plex and
# for plex users to import correctly otherwise the plex connection will fail
# and Users â†’ 'Import Plex Users' will return no results. If you are using plex
# behind a proxy this is your external proxy address.
#
# Wildcard certificates will cause overseerr to FAIL to connect with the error:
#
#  Hostname/IP does not match certificate's altnames: IP: {IP} is not in the cert's list
#
# Load available servers and use the plex.direct local link.
#
# Enabling 'overseerr_main_new_plex_login' will allow plex users with library
# access to sign-in without being imported.
#
# Reference:
# * https://github.com/sct/overseerr/issues/3686
# * https://github.com/sct/overseerr/discussions/2012
overseerr_plex_ip: ''

# Plex server port. Default: 32400.
overseerr_plex_port: 32400

# Use HTTPS for plex connections.
# Self-signed certificates are not supported.
#
# Wildcard certificates will cause overseerr to FAIL to connect with the error:
#
#  Hostname/IP does not match certificate's altnames: IP: {IP} is not in the cert's list
#
# Load available servers and use the plex.direct local link.
#
# Default: False.
#
# Reference:
# * https://github.com/sct/overseerr/discussions/2012
overseerr_plex_use_ssl: false

# Plex libraries to scan for existing titles.
# HIGHLY RECOMMEND manual configuration of plex settings (sync libraries,
# manual library scan) then migrate values after initial installation.
#
# overseerr_plex_libraries:
#  - id: int (overseerr order ID starting at 1)
#    name: str (plex library name)
#    enabled: bool (enable scanning of plex library. Default: True)
#    type: str (plex library type. values: 'movie', 'show'. Default: 'movie')
#    last_scan: int (unixtimestmp of last scan. Default: 0 (EPOC - force scan))
#
# overseerr_plex_libraries:
#   - id: 1
#     name: 'TV Shows
#     enabled: true
#     type: 'show'
#     last_scan: 0
#   - id: 2
#     name: 'Movies'
#     enabled: true
#     type: 'movie'
#     last_scan: 0
#
# Default: [].
overseerr_plex_libraries: []

# Direct users to alternative plex web app player.
# The 'Play on Plex' button links to 'https://app.plex.tv/desktop' to play
# media from the configured server. This will force the use of your server
# instead. Incorrectly configuring this may result in a broken installation.
#
# Note that you will need to enter the full path to the web app (e.g.,
# https://plex.myawesomeserver.com/web).
#
# Default: '' (use 'https://app.plex.tv/desktop').
overseerr_plex_web_app_url: ''

# Plex machine ID used to claim the server (plex processed machine identifer).
#
# Found in Plex 'Preferences.xml' as 'ProcessedMachineIdentifier'.
#
# Default: ''.
overseerr_plex_machine_id: ''

###############################################################################
# Tautulli
###############################################################################
# Tautulli hostname or ip address.
# Disabling hostname will disable tautulli.
#
# Default: '' (disable tautulli).
overseerr_plex_tautulli_hostname: ''

# Tautulli port. Default: 8181.
overseerr_plex_tautulli_port: 8181

# Use SSL with tautulli? Default: False.
overseerr_plex_tautulli_use_ssl: false

# Base URL path to access Tautulli.
# Requires leading '/'.
#
# Default: ''.
overseerr_plex_tautulli_url_base: ''

# Tautulli API key. Default: ''.
overseerr_plex_tautulli_api_key: ''

# Tautulli external URL. Default: ''.
overseerr_plex_tautulli_external_url: ''

###############################################################################
# Radarr
###############################################################################
# Only v3+ servers are supported.
#
# HIGHLY RECOMMEND manual configuration of radarr settings then migrate values
# after initial installation.
#
# If you keep separate copies of non-4K and 4K media in your libraries, you
# will need to set up multiple Radarr instances and link each of them to
# overseerr.
#
# Overseerr checks these linked servers to determine whether or not media has
# already been requested or is available, so two servers of each type are
# required if you keep separate non-4K and 4K copies of media.
#
# If you only maintain one copy of media, you can instead simply set up one
# server and set the 'Quality Profile' setting on a per-request basis.
#
# List of dict containing radarr servers to use.
# overseerr_plex_radarr:
#   - name: str - server name
#     hostname: str - server IP or DNS address
#     port: int - server port
#         If radarr is behind a reverse proxy this is likely 443 (SSL).
#         Default: 7878.
#     api_key: str - server API key
#     use_ssl: bool - use SSL with server
#         Default: False.
#     active_profile_id: int - radarr quality profile ID
#     active_profile_name: str - radarr quality profile name
#     active_directory: str - radarr media directory
#     is_4k: bool - 4k support
#         Default: False.
#     minimum_availability: str - media availability
#         Values:
#           'released': consider available when streaming or released to disc
#           'announced': consider available when added to radarr
#           'inCinemas': consider available when released to cinemas
#         Default: 'released'.
#     tags: list of int - tag ids
#         Default: [] (disabled).
#     is_default: bool - default radarr server
#         Default: True.
#     external_url: str - external URL to use
#         Default: '' (disabled).
#     url_base: str - base URL path to access radarr
#         Requires leading '/'.
#         Default: '' (disabled)).
#     sync_enabled: bool - enable scan/sync
#         Default: True.
#     prevent_search: bool - enable automatic search
#         Default: True.
#     tag_requests: bool - tag requests with user id/name
#         Default: False.
#     id: int - overseerr radarr server order
#         Default: 0.
#
# overseerr_plex_radarr:
#   - name: 'radarr'
#     hostname: '127.0.0.1'
#     port: 7878
#     api_key: '{MY SECRET VAULT KEY}'
#     use_ssl: false
#     active_profile_id: 1
#     active_profile_name: '1080p'
#     active_directory: '/data/media'
#     is_4k: false
#     minimum_availability: 'released'
#     tags:
#       - 1
#       - 2
#     is_default: true
#     external_url: ''
#     url_base: ''
#     sync_enabled: true
#     prevent_search: true
#     tag_requests: false
#     id: 0
#
# Default: [] (disabled).
#
# Reference:
# * https://docs.overseerr.dev/using-overseerr/settings#radarr-sonarr-settings
overseerr_plex_radarr: []

###############################################################################
# Sonarr
###############################################################################
# Only v3+ servers are supported.
#
# HIGHLY RECOMMEND manual configuration of sonarr settings then migrate values
# after initial installation.
#
# If you keep separate copies of non-4K and 4K media in your libraries, you
# will need to set up multiple sonarr instances and link each of them to
# overseerr.
#
# Overseerr checks these linked servers to determine whether or not media has
# already been requested or is available, so two servers of each type are
# required if you keep separate non-4K and 4K copies of media.
#
# If you only maintain one copy of media, you can instead simply set up one
# server and set the 'Quality Profile' setting on a per-request basis.
#
# List of dict containing sonarr servers to use.
# overseerr_plex_sonarr:
#   - name: str - server name
#     hostname: str - server IP or DNS address
#     port: int - server port
#         If sonarr is behind a reverse proxy this is likely 443 (SSL).
#         Default: 7878.
#     api_key: str - server API key
#     use_ssl: bool - use SSL with server
#         Default: False.
#     active_profile_id: int - sonarr quality profile ID
#     active_profile_name: str - sonarr quality profile name
#     active_directory: str - sonarr media directory
#     active_language_profile_id: int - sonarr language profile id
#         Default: 1 (english).
#     active_anime_profile_id: int - sonarr quality profile id
#     active_anime_profile_name: str - sonarr quality profile name
#     active_anime_directory: str - sonarr media directory
#     active_anime_language_profile_id: int - sonarr language profile id
#         Default: 1 (english).
#     tags: list of int - tag ids
#         Default: [] (disabled).
#     anime_tags: List of int - tag ids
#         Default: [] (disabled).
#     is_4k: bool - 4k support
#         Default: False.
#     is_default: bool - default radarr server
#         Default: True.
#     enable_season_folders: bool - use season folders
#         Default: True.
#     external_url: str - external URL to use
#         Default: '' (disabled).
#     url_base: str - base URL path to access radarr
#         Requires leading '/'.
#         Default: '' (disabled)).
#     sync_enabled: bool - enable scan/sync
#         Default: True.
#     prevent_search: bool - enable automatic search
#         Default: True.
#     tag_requests: bool - tag requests with user id/name
#         Default: False.
#     id: int - overseerr radarr server order
#         Default: 0.
#
# overseerr_plex_sonarr:
#   - name: 'sonarr'
#     hostname: '127.0.0.1'
#     port: 8989
#     api_key: 'MY SECRET VAULT KEY'
#     use_ssl: false
#     active_profile_id: 1
#     active_profile_name: '1080p'
#     active_directory: '/data/media'
#     active_language_profile_id: 1
#     active_anime_profile_id: 1
#     active_anime_profile_name: '1080p'
#     active_anime_directory: '/data/media'
#     active_anime_language_profile_id: 1
#     tags:
#       - 1
#       - 2
#     anime_tags:
#       - 1
#       - 2
#     is_4k: false
#     is_default: true
#     enable_season_folders: true
#     external_url: ''
#     url_base: ''
#     sync_enabled: true
#     prevent_search: true
#     tag_requests: false
#     id: 0
#
# Default: [] (disabled).
#
# Reference:
# * https://docs.overseerr.dev/using-overseerr/settings#radarr-sonarr-settings
overseerr_plex_sonarr: []

###############################################################################
# Jobs
###############################################################################
#
# Reference:
# * https://github.com/sct/overseerr/issues/3818

# Plex recently added scan cronjob interval. Default: '0 */5 * * * *'.
overseerr_plex_jobs_plex_recently_added_scan: '0 */5 * * * *'

# Plex full library scan cronjob interval. Default: '0 0 3 * * *'.
overseerr_plex_jobs_plex_full_scan: '0 0 3 * * *'

# Plex watchlist sync cronjob interval. Default: '0 */10 * * * *'.
overseerr_plex_jobs_plex_watchlist_sync: '0 */10 * * * *'

# Radarr scan cronjob interval. Default: '0 0 4 * * *'.
overseerr_plex_jobs_radarr_scan: '0 0 4 * * *'

# Sonarr scan cronjob interval. Default: '0 30 4 * * *'.
overseerr_plex_jobs_sonarr_scan: '0 30 4 * * *'

# Media availability sync cronjob interval. Default: '0 0 5 * * *'.
overseerr_plex_jobs_availability_sync: '0 0 5 * * *'

# Download sync cronjob interval. Default: '0 * * * * *'.
overseerr_plex_jobs_download_sync: '0 * * * * *'

# Download sync reset cronjon internval. Default: '0 0 1 * * *'.
overseerr_plex_jobs_download_sync_reset: '0 0 1 * * *'

# Image cache cleanup cronjob interval. Default: '0 0 5 * * *'.
overseerr_plex_jobs_image_cache_cleanup: '0 0 5 * * *'
