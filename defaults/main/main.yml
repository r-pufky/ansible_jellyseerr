---
###############################################################################
# Jellyseerr Service Configuration
###############################################################################
# Existing databases are migrated automatically when new versions are
# installed. Migration between database platforms is not supported and must be
# done manually.
#
# Requires ~2GB Memory.
#
# Install size: ~3.4GB
#          Jellyseerr: ~3GB.
#   nvm(pnpm, nodejs): ~300MB.
#            Packages: ~48MB.
#
# Set repo_host_access_token if API is rate limited. See r_pufky.deb.repo.

# Jellyseerr Release.
#
# Versions (Schematic):
#       MAJOR: Unsafe - requires major role changes; only default MAJOR version
#              is supported. See other branches if they exist.
#       MINOR: Safe - Development is very active and should stick to schematic
#              releases, not named branch releases.
#       PATCH: Safe - Usually requires no role updates.
#   RECOMMEND: Only increment PATCH. Never use 'latest'.
#
# Values:
#   {VERSION}: Tagged release to use ('v2.7.3').
#      latest: Use latest stable release.
#
# Default: 'v2.7.3'.
jellyseerr_srv_version: 'v2.7.3'

# Bind Jellyseerr service to specified interface.
#
# Values:
#          '': bind to all available interfaces (default).
#        {IP}: bind to valid IPv4/6 address ('127.0.0.1', '::', etc).
#   localhost: bind to localhost.
#
# Default: '' (all interfaces).
jellyseerr_srv_bind_address: ''

# HTTP port. Default: 5055.
jellyseerr_srv_port: 5055

# Remove old installs on upgrade success? Default: True.
jellyseerr_srv_delete_old_versions_enable: true

# Service Umask. Default: '0002'.
jellyseerr_srv_u_mask: '0002'

# Force overwrite existing install?
#
# DATA DESTRUCTIVE.
#
# Removes existing cached downloaded archives and existing same-version install
# directories (if any). Any user data in these directories are DESTROYED.
#
# Default: False.
jellyseerr_srv_force_overwrite: false

# Automatically restart Jellyseerr daily? Default: True.
jellyseerr_srv_restart_daily_enable: true

# Only apply configuration?
#
# Reduces role application time by ONLY applying configuration changes.
#
# This should ONLY be used after the role has been fully run once.
#
# Useful when adding a change without reconfiguring the whole system or
# checking and installing a new version. Suggest applying with extra options:
#
#   ansible-playbook site.yml
#       --tags Jellyseerr
#       -e 'jellyseerr_srv_force_config_only_enable=true
#
# Default: False.
jellyseerr_srv_force_config_only_enable: false

# Enable polling for jellyseerr_srv_port?
#
# Jellyseerr will report service is active and running but may not be ready to
# accept API requests for user modifications. Wait until the webserver is
# responding before attempting API calls. Automatically proceeds after
# forgejo_role_poll_timeout seconds.
#
# Default: True (poll).
jellyseerr_srv_poll_enable: true

###############################################################################
# Jellyseerr Service User
###############################################################################

# User that Jellyseerr will run under.
#
# Enable jellyseerr_srv_create_user if this account is not externally managed.
#
# Must use BASH for build environment. nvm packages cached in home directory.
#
# Default: 'jellyseerr'.
jellyseerr_srv_user: 'jellyseerr'

# Group that Jellyseerr will run under.
#
# Enable jellyseerr_srv_create_user if this group is not externally managed.
#
# Default: 'jellyseerr'.
jellyseerr_srv_group: 'jellyseerr'

# Create jellyseerr_srv_user, jellyseerr_srv_group if not detected?
#
# Applied via r_pufky.deb.users, see vars/main.yml for default user attributes.
#
# Default: True.
jellyseerr_srv_create_user: true

# Enable user management of data/media files?
#
# Use jellyseerr_srv_user to execute data/media management commands. Role
# applies media permissions using 'root' by default. For mounted data locations
# (NFS with squashed mounts, mapped container mounts, etc) the local root user
# will not have sufficient privileges to modify these files.
#
# Applies to:
# * /opt/jellyseerr
#
# Default: False.
jellyseerr_srv_user_data_manage_enable: false

###############################################################################
# Build Options
###############################################################################

# Build memory restriction (MB).
#
# Restrict builds to only use specified amount of RAM when building project. By
# default this is auto detected but may be overridden if it is reported
# incorrectly in container systems.
#
# Values:
#    #: Memory ceiling for Builds.
#   -1: Autodetect memory ceiling (default).
#
# Default: -1 (autodetect).
jellyseerr_srv_build_memory: -1

# Clean PNPM cache after build?
#
# This will clear unused packages from the PNPM build cache after a successful
# build; which may help to maintain reasonable disk space usage when upgrading
# between versions.
#
# Default: True.
jellyseerr_srv_build_clear_cache: true

###############################################################################
# Jellyseerr Owner
###############################################################################
# Jellyseerr owner provides initial login, configuration, and REST API use.
#
# Additional owner options and users may be configured after service started.

# Owner email. Default: 'jellyseerr@example.com'.
jellyseerr_srv_owner_email: 'jellyseerr@example.com'

# Owner username. Default: 'jellyseerr'.
jellyseerr_srv_owner_username: 'jellyseerr'

# Owner password. Default: '{RANDOM}' (randomly generated).
jellyseerr_srv_owner_password: '{{
    lookup("ansible.builtin.password",
           "/dev/null",
           chars=["ascii_lowercase", "ascii_uppercase", "digits"],
           length=32)
  }}'

# Owner avatar.
#
# Avatar URL for profile picture. Use image link from Plex/Jellyseerr profile.
#
# Default: (empty silhouette).
jellyseerr_srv_owner_avatar: '{{
    "https://gravatar.com/avatar/" ~
    "c77fdc27cab83732b8623d2ea873d330?default=mm&size=200"
  }}'
