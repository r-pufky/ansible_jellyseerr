---
# yamllint disable rule:line-length
###############################################################################
# Overseerr Add Users
###############################################################################
# Update overseerr users via database.
#
# All specified users are updated. This will only setup initial users, per-user
# configuration will need to be done.
#
# Once overseerr is stable, remove direct DB interactions and do all
# manipulations via the REST API.
#
# Args:
#   user: dict - overseerr_users
#     id: int - unique database id starting at 1
#     email: str - email
#     username: str - display name.
#         Default: ''.
#     plex_id: int - plex id.
#         Default: ''.
#     plex_token: int - plex token.
#         Default: ''.
#     permissions: int - user permissions
#         Default: 32.
#     avatar: str - avatar url
#         Default: ''.
#     password: str - bcrypt 12 round password hash, required for local users,
#           plex user types use use Oauth.
#         Default: ''
#     user_type: int - user type
#         Values:
#           1: plex user
#           2: local user
#         Default: 1.
#     plex_username: str - plex username
#         Default: ''.
#     movie_quota_limit: int - movie quota limit
#         Default: 0 (unlimited).
#     movie_quota_days: int - movie day limit
#         Default: 7 (unlimited).
#     tv_quota_limit: int - tv quota limit
#         Default: 0 (unlimited).
#     tv_quota_days: int - tv day limit
#         Default: 7 (unlimited).
#   settings:
#     notification_types:
#       email: int - see notifications.yml
#         Default: 0.
#       discord: int - see notifications.yml
#         Default: 0.
#       pushbullet: int - see notifications.yml
#         Default: 0.
#       pushover: int - see notifications.yml
#         Default: 0.
#       slack: int - see notifications.yml
#         Default: 0.
#       telegram: int - see notifications.yml
#         Default: 0.
#       webhook: int - see notifications.yml
#         Default: 0.
#       webpush: int - see notifications.yml
#         Default: 0.
#     discord_id: str - discord user id
#         Default: ''.
#     region: str - discover region, see overseerr_main_region or 'all'
#         Default: '' (inherit region).
#     original_language: list of str - discover language, see
#           overseerr_main_original_language or ['all'].
#         Default: [] (inherit region).
#     telegram_chat_id: str - telegram chat id
#         Default: ''.
#     telegram_send_silently: bool - silence telegram notifications
#         Default: false.
#     pgp_key: str - PGP public key, see overseerr_agents_email_pgp_private_key
#         Default: ''.
#     locale: str - display language, see overseerr_main_locale
#         Default: ''.
#     pushbullet_access_token: str - pushbullet access token, see
#           overseerr_agents_pushbullet_access_token
#         Default: ''.
#     pushover_application_token: str - pushbullet application token, see
#           overseerr_agents_pushbullet_access_token
#         Default: ''.
#     pushover_user_key: str - pushover user key, see
#           overseerr_agents_pushover_access_token
#         Default: ''.
#     watchlist_sync_movies: bool - auto-request movies, still requires
#           appropriate Auto-Request, Auto-Approve permissions
#         Default: false.
#     watchlist_sync_tv: bool - auto-request series, still requires
#           appropriate Auto-Request, Auto-Approve permissions
#         Default: false.
#
# Args:
#   _overseerr_dir: str - install location
#
# Reference:
# * overseerr-api.yml
# * https://api-docs.overseerr.dev/

- name: 'DB add user | assert password is using bcrypt 12 rounds ($2b$12$)'
  ansible.builtin.assert:
    that:
      - user["password"].startswith('$2b$12$')
  when: >
    'password' in user and
    user['password'] | length > 0

# TODO(api): migrate to rest api when it is stable.
#     Massage dictionary into expected format for DB insert; ansible filters do
#     not output data in the strict format required for overseerr. Overseerr
#     will fail to start if there is extraneous whitespace or different quoting
#     (' instead of "), etc. We manually build the expected format until the
#     rest api is stable and we can do this modification via |to_json.
- name: 'DB add user | sanitize user notification settings'
  ansible.builtin.set_fact:
    _overseerr_notification_types: '{{ settings["notification_types"] | default({}) }}'

- name: 'DB add user | parse notification settings for insert'
  ansible.builtin.set_fact:
    _overseerr_dbus_notification_types_prep: '{\"email\":{{ _overseerr_notification_types["email"] | default(0) }},\"discord\":{{ _overseerr_notification_types["discord"] | default(0) }},\"pushbullet\":{{ _overseerr_notification_types["pushbullet"] | default(0) }},\"pushover\":{{ _overseerr_notification_types["pushover"] | default(0) }},\"slack\":{{ _overseerr_notification_types["slack"] | default(0) }},\"telegram\":{{ _overseerr_notification_types["telegram"] | default(0) }},\"webhook\":{{ _overseerr_notification_types["webhook"] | default(0) }},\"webpush\":{{ _overseerr_notification_types["webpush"] | default(0) }}}'

# Use [] access to default undefined cases.
- name: 'DB add user | build user query primitives'
  ansible.builtin.set_fact:
    _overseerr_dbu_id: '{{ user.id }}'
    _overseerr_dbu_email: '\"{{ user.email }}\"'
    _overseerr_dbu_username: '\"{{ user["username"] | default("") }}\"'
    _overseerr_dbu_plex_id: '\"{{ user["plex_id"] | default("") }}\"'
    _overseerr_dbu_plex_token: '\"{{ user["plex_token"] | default("") }}\"'
    _overseerr_dbu_permissions: '{{ user["permissions"] | default(32) }}'
    _overseerr_dbu_avatar: '\"{{ user["avatar"] | default("") }}\"'
    _overseerr_dbu_password: '\"{{ user["password"] | default("") }}\"'
    _overseerr_dbu_user_type: '{{ user["user_type"] | default(1) }}'
    _overseerr_dbu_plex_username: '\"{{ user["plex_username"] | default("") }}\"'
    _overseerr_dbu_movie_quota_limit: '{{ user["movie_quota_limit"] | default(0) }}'
    _overseerr_dbu_movie_quota_days: '{{ user["movie_quota_days"] | default(7) }}'
    _overseerr_dbu_tv_quota_limit: '{{ user["tv_quota_limit"] | default(0) }}'
    _overseerr_dbu_tv_quota_days: '{{ user["tv_quota_days"] | default(7) }}'
    _overseerr_dbus_notification_types: '{{ _overseerr_dbus_notification_types_prep | quote }}'
    _overseerr_dbus_discord_id: '\"{{ settings["discord_id"] | default("") }}\"'
    _overseerr_dbus_user_id: '{{ user.id }}'
    _overseerr_dbus_region: '\"{{ settings["region"] | default("") | upper }}\"'
    _overseerr_dbus_original_language: '\"{{ settings["original_language"] | default("") | join("|") | lower }}\"'
    _overseerr_dbus_telegram_chat_id: '\"{{ settings["telegram_chat_id"] | default("") }}\"'
    _overseerr_dbus_telegram_send_silently: '{{ settings["telegram_send_silently"] | default(0) | bool | int }}'
    _overseerr_dbus_pgp_key: '\"{{ settings["pgp_key"] | default("") }}\"'
    _overseerr_dbus_locale: '\"{{ settings["locale"] | default("") | lower }}\"'
    _overseerr_dbus_pushbullet_access_token: '\"{{ settings["pushbullet_access_token"] | default("") }}\"'
    _overseerr_dbus_pushover_application_token: '\"{{ settings["pushover_application_token"] | default("") }}\"'
    _overseerr_dbus_pushover_user_key: '\"{{ settings["pushover_user_key"] | default("") }}\"'
    _overseerr_dbus_watchlist_sync_movies: '{{ settings["watchlist_sync_movies"] | default(0) | bool | int }}'
    _overseerr_dbus_watchlist_sync_tv: '{{ settings["watchlist_sync_tv"] | default(0) | bool | int }}'

- name: 'DB add user | update {{ _overseerr_dbu_email }}'
  ansible.builtin.command: '{{ overseerr_role_sqlite3 }} "{{ _overseerr_dir }}/config/db/db.sqlite3" "{{ overseerr_role_user_insert }} ({{ _overseerr_dbu_id }}, {{ _overseerr_dbu_email }}, {{ _overseerr_dbu_username }}, {{ _overseerr_dbu_plex_id }}, {{ _overseerr_dbu_plex_token }}, {{ _overseerr_dbu_permissions }}, {{ _overseerr_dbu_avatar }}, {{ _overseerr_dbu_password }}, {{ _overseerr_dbu_user_type }}, {{ _overseerr_dbu_plex_username }}, {{ _overseerr_dbu_movie_quota_limit }}, {{ _overseerr_dbu_movie_quota_days }}, {{ _overseerr_dbu_tv_quota_limit }}, {{ _overseerr_dbu_tv_quota_days }})"'
  changed_when: true
  become: true
  no_log: '{{ not users_debug }}'  # password and auth tokens

- name: 'DB add user | settings update for {{ _overseerr_dbu_email }}'
  ansible.builtin.command: '{{ overseerr_role_sqlite3 }} "{{ _overseerr_dir }}/config/db/db.sqlite3" "{{ overseerr_role_user_setting_insert }} ({{ _overseerr_dbus_notification_types }}, {{ _overseerr_dbus_discord_id }}, {{ _overseerr_dbus_user_id }}, {{ _overseerr_dbus_region }}, {{ _overseerr_dbus_original_language }}, {{ _overseerr_dbus_telegram_chat_id }}, {{ _overseerr_dbus_telegram_send_silently }}, {{ _overseerr_dbus_pgp_key }}, {{ _overseerr_dbus_locale }}, {{ _overseerr_dbus_pushbullet_access_token }}, {{ _overseerr_dbus_pushover_application_token }}, {{ _overseerr_dbus_pushover_user_key }}, {{ _overseerr_dbus_watchlist_sync_movies }}, {{ _overseerr_dbus_watchlist_sync_tv }})"'
  changed_when: true
  become: true
  no_log: '{{ not users_debug }}'  # access tokens
