---
# yamllint disable rule:line-length
###############################################################################
# Set Owner
###############################################################################
# Jellyseerr must be up and running to ensure DB's are created. Manually add
# owner to DB if required. Confirm owner API access.
#
# Use builtin Jellyseerr bcrypt library for generating password hash and inject
# user with minimum required DB columns.
#
# Decision: Only manage owner - REST API does not provide a good way to set
#     user passwords (requires old and new passwords), etc; without directly
#     editing DB. Instead create required user so user can login.
#
# User MUST have following attributes set:
# * id=1
# * email
# * permissions=2
# * avatar
# * password
# * user_type=2
#
# Jinja2 wart: Automatically generated JSON bodies in URI renders variables as
#              strings before creating the JSON object, leading to 'Value
#              should be integer' errors even when converting with '| int' in
#              task. Building JSON strings manually when more than string types
#              are required to avoid this issue. See reference.
#
# Reference:
# * http://localhost:5055/api-docs
# * https://github.com/ansible/ansible/issues/77808
# * https://stackoverflow.com/questions/50123855/ansible-uri-module-passing-integer-from-variable

- name: 'Set owner | poll service ðŸ—˜'
  when: _jellyseerr_srv_poll_enable.raw
  ansible.builtin.debug:
    msg: |
      â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
      â”‚                                                                   â”‚
      â”‚               Waiting until port becomes available.               â”‚
      â”‚                                                                   â”‚
      â”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯
      â”‚ Max {{ jellyseerr_role_poll_timeout }} seconds.

- name: 'Set owner | poll service'
  when: _jellyseerr_srv_poll_enable.raw
  ansible.builtin.wait_for:
    port: '{{ _jellyseerr_srv_port.raw }}'
    delay: 5
    sleep: '{{ jellyseerr_role_poll_interval }}'
    timeout: '{{ jellyseerr_role_poll_timeout }}'
    msg: |
      â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
      â”‚                                                                   â”‚
      â”‚                            Timed out.                             â”‚
      â”‚                                                                   â”‚
      â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

- name: 'Set owner'
  block:
    - name: 'Set owner | update {{ _jellyseerr_srv_owner_email.raw }}'
      ansible.builtin.uri:
        url: '{{ jellyseerr_role_api_base }}/auth/local'
        method: 'POST'
        status_code: [200]
        headers:
          'X-Api-Key': '{{ _jellyseerr_cfg_api_key.raw }}'
        body:
          email: '{{ _jellyseerr_srv_owner_email.raw }}'
          password: '{{ _jellyseerr_srv_owner_password.raw }}'
        body_format: 'json'
      register: _jellyseerr_api
  rescue:
    - name: 'Set owner | WARNING âš '
      ansible.builtin.debug:
        msg: |
          â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
          â”‚                                                                   â”‚
          â”‚               Owner not authorized for API access.                â”‚
          â”‚                                                                   â”‚
          â”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯
          â”‚ Adding owner directly to DB.

    - name: 'Set owner | hash password'
      ansible.builtin.shell: >
          source {{ _jellyseerr.nvm_env }} &&
          {{ _jellyseerr.corepack }} &&
          node -e "import bcrypt from 'bcrypt';
          const pw =
          await bcrypt.hash('{{ _jellyseerr_srv_owner_password.raw }}', 12);
          console.log(pw);"
      args:
        executable: '/bin/bash'
        chdir: '{{ jellyseerr_role_repo_extract_symlink }}'
      changed_when: false
      become: true
      become_user: '{{ _jellyseerr_srv_user.raw }}'
      register: _jellyseerr_cmd
      # TODO(role): disabled until future ansible data tagging update.
      # no_log: true  # password.

    # TODO(role): disabled until future ansible data tagging update.
    # no_log: true  # password and auth tokens.
    - name: 'Set owner | add {{ _jellyseerr_srv_owner_email.raw }}'
      when: _jellyseerr_cfg_db_type.raw == 'sqlite'
      ansible.builtin.include_role:
        name: 'r_pufky.srv.sqlite'
      vars:
        sqlite_sql: >
          "{{ jellyseerr_role_sqlite_user_insert }} (
          1,
          \"{{ _jellyseerr_srv_owner_email.raw }}\",
          2,
          \"{{ _jellyseerr_srv_owner_avatar.raw }}\",
          \"{{ _jellyseerr_cmd.stdout_lines[-1] }}\",
          2
          )"
        sqlite_db: '{{ jellyseerr_role_sqlite_db }}'
        sqlite_quote: false
        sqlite_become: true
        sqlite_become_user: '{{ _jellyseerr_srv_user.raw }}'

    # TODO(role): disabled until future ansible data tagging update.
    # no_log: true  # password and auth tokens.
    - name: 'Set owner | add {{ _jellyseerr_srv_owner_email.raw }}'
      when: _jellyseerr_cfg_db_type.raw == 'postgres'
      community.postgresql.postgresql_query:
        ca_cert: '{{ _jellyseerr_cfg_db_ssl_ca_file._dest }}'
        login_db: '{{ _jellyseerr_cfg_db_name.raw }}'
        login_host: '{{
            _jellyseerr_cfg_db_host.raw
            if _jellyseerr_cfg_db_host.raw | length > 0 else
            omit
          }}'
        login_password: '{{ _jellyseerr_cfg_db_pass.raw }}'
        login_unix_socket: '{{
            jellyseerr_cfg_db_socket_path.raw
            if _jellyseerr_cfg_db_host.raw | length == 0 else
            omit
          }}'
        login_user: '{{ _jellyseerr_cfg_db_user.raw }}'
        port: '{{
            _jellyseerr_cfg_db_port.raw
            if _jellyseerr_cfg_db_host.raw | length > 0 else
            omit
          }}'
        ssl_mode: 'prefer'
        query: >
          {{ jellyseerr_role_pg_user_insert }} (
          1,
          '{{ _jellyseerr_srv_owner_email.raw }}',
          2,
          '{{ _jellyseerr_srv_owner_avatar.raw }}',
          '{{ _jellyseerr_cmd.stdout_lines[-1] }}',
          2
          )
          ON CONFLICT (id) DO UPDATE SET
          email='{{ _jellyseerr_srv_owner_email.raw }}',
          permissions=2,
          avatar='{{ _jellyseerr_srv_owner_avatar.raw }}',
          password='{{ _jellyseerr_cmd.stdout_lines[-1] }}',
          "userType"=2
          WHERE "user".id=1;

    - name: 'Set owner | update {{ _jellyseerr_srv_owner_email.raw }}'
      ansible.builtin.uri:
        url: '{{ jellyseerr_role_api_base }}/auth/local'
        method: 'POST'
        status_code: [200]
        headers:
          'X-Api-Key': '{{ _jellyseerr_cfg_api_key.raw }}'
        body:
          email: '{{ _jellyseerr_srv_owner_email.raw }}'
          password: '{{ _jellyseerr_srv_owner_password.raw }}'
        body_format: 'json'
      failed_when: false
      register: _jellyseerr_api

    - name: 'Set owner | FAILURE âœ˜'
      when: _jellyseerr_api.status != 200
      ansible.builtin.fail:
        msg: |
          â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
          â”‚                                                                   â”‚
          â”‚                       Failed to add owner.                        â”‚
          â”‚                                                                   â”‚
          â”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯
          â”‚ Set jellyseerr_cfg_owner_*.
